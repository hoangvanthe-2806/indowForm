<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>